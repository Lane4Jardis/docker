name: Build and Push Docker PHP CLI Images

on:
  push:
    paths:
      - 'phpCli/**'
      - '.github/workflows/phpCli.yml'

  pull_request:
    paths:
      - 'phpCli/**'
      - '.github/workflows/phpCli.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    concurrency:
      group: build-${{ github.ref }}
      cancel-in-progress: true

    strategy:
      matrix:
        php_version: ["7.4", "8.0", "8.1", "8.2", "8.3"]
      fail-fast: false

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache-matrix
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          name: my-builder-matrix
          install: true
          driver-opts: image=moby/buildkit:buildx-stable-1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Build and cache Docker version images
        run: |
          echo "Building PHP-CLI image for PHP version ${{ matrix.php_version }}..."
          cd phpCli
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --build-arg PHP_VERSION=${{ matrix.php_version }} \
            --cache-from=type=local,src=/tmp/.buildx-cache-matrix \
            --cache-to=type=local,dest=/tmp/.buildx-cache-matrix,mode=max \
            -t ${{ secrets.DOCKER_USER_NAME }}/phpcli:${{ matrix.php_version }} \
            -o type=docker \
            -f dockerfile .

  push:
    runs-on: ubuntu-latest

    concurrency:
      group: push-${{ github.ref }}
      cancel-in-progress: true

    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true

    needs: build

    strategy:
      matrix:
        php_version: ["7.4", "8.0", "8.1", "8.2", "8.3"]
      fail-fast: false

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER_NAME }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Push Docker version images
        run: |
          echo "Pushing PHP-CLI image for PHP version ${{ matrix.php_version }}..."
          docker tag ${{ secrets.DOCKER_USER_NAME }}/phpcli:${{ matrix.php_version }} ${{ secrets.DOCKER_USER_NAME }}/phpcli:${{ matrix.php_version }}
          docker push ${{ secrets.DOCKER_USER_NAME }}/phpcli:${{ matrix.php_version }}

      - name: Tag `latest` for PHP 8.3
        if: matrix.php_version == '8.3' # Nur f√ºr Version 8.3
        run: |
          echo "Tagging PHP 8.3 image as 'latest'..."
          docker tag ${{ secrets.DOCKER_USER_NAME }}/phpcli:8.3 ${{ secrets.DOCKER_USER_NAME }}/phpcli:latest
          docker push ${{ secrets.DOCKER_USER_NAME }}/phpcli:latest
