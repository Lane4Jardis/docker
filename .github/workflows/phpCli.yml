name: Build and Push Docker PHP CLI Images

on:
  push:
    paths:
      - 'phpCli/**'
      - '.github/workflows/phpCli.yml'
  pull_request:
    paths:
      - 'phpCli/**'
      - '.github/workflows/phpCli.yml'

concurrency:
  group: ${{ github.ref }}-build-push
  cancel-in-progress: true

jobs:
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php_version: ["7.4", "8.0", "8.1", "8.2", "8.3"]
        platform: ["linux/amd64", "linux/arm64"]
      fail-fast: false

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Cache Docker Layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache-matrix
          key: ${{ runner.os }}-docker-${{ github.sha }}-${{ matrix.php_version }}-${{ matrix.platform }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build Docker Image
        run: |
          echo "Building PHP-CLI image for PHP version ${{ matrix.php_version }} and platform ${{ matrix.platform }}"
          cd phpCli
          docker buildx build \
            --platform ${{ matrix.platform }} \
            --build-arg PHP_VERSION=${{ matrix.php_version }} \
            --cache-from=type=local,src=/tmp/.buildx-cache-matrix \
            --cache-to=type=local,dest=/tmp/.buildx-cache-matrix,mode=max \
            -t phpcli:${{ matrix.php_version }}-${{ matrix.platform }} \
            -o type=tar,dest=phpcli-${{ matrix.php_version }}-${{ matrix.platform }}.tar \
            -f dockerfile .

      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v3
        with:
          name: phpcli-${{ matrix.php_version }}-${{ matrix.platform }}
          path: phpCli/phpcli-${{ matrix.php_version }}-${{ matrix.platform }}.tar

  push:
    name: Push Docker Images
    needs: build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php_version: ["7.4", "8.0", "8.1", "8.2", "8.3"]
        platform: ["linux/amd64", "linux/arm64"]
      fail-fast: false

    permissions:
      contents: read
      packages: write

    steps:
      - name: Download Docker Image Artifact
        uses: actions/download-artifact@v3
        with:
          name: phpcli-${{ matrix.php_version }}-${{ matrix.platform }}
          path: ./phpCli

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER_NAME }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Load Docker Image
        run: |
          docker load -i ./phpCli/phpcli-${{ matrix.php_version }}-${{ matrix.platform }}.tar

      - name: Tag Docker Image
        run: |
          IMAGE_TAG="${{ secrets.DOCKER_USER_NAME }}/phpcli:${{ matrix.php_version }}"
          docker tag phpcli:${{ matrix.php_version }}-${{ matrix.platform }} $IMAGE_TAG
          if [ "${{ matrix.php_version }}" = "8.3" ]; then
            docker tag phpcli:${{ matrix.php_version }}-${{ matrix.platform }} ${{ secrets.DOCKER_USER_NAME }}/phpcli:latest
          fi

      - name: Push Docker Image
        run: |
          IMAGE_TAG="${{ secrets.DOCKER_USER_NAME }}/phpcli:${{ matrix.php_version }}"
          docker push $IMAGE_TAG
          if [ "${{ matrix.php_version }}" = "8.3" ]; then
            docker push ${{ secrets.DOCKER_USER_NAME }}/phpcli:latest
          fi
